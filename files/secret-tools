#!/bin/bash/gdthehacker


clear

# HW_Toolkit - A multi-option hacking toolkit for Termux


#color codes for styling
GRY='\033[1;30m'
RED='\033[0;31m'
BLU='\033[0;34m'
GRN='\033[0;32m'
PUL='\033[0;35m'
YEL="\033[33m"
MAGENTA="\033[35m"
CYAN="\033[36m"
WHITE="\033[37m"
RST='\033[0m'

###########################################################

# Define background colors
BG_RED="\033[41m"
BG_GREEN="\033[42m"
BG_YELLOW="\033[43m"
BG_BLUE="\033[44m"
BG_MAGENTA="\033[45m"
BG_CYAN="\033[46m"
BG_WHITE="\033[47m"
BG_BLACK='\033[40m'





# Function to nmap scanning

nmap_scan() {
     echo ""
     echo ""
     echo ""
     echo "     🟡 Scan Ipv4 Open Port's "
     echo -e $CYAN ""
     read -p "     Enter the target IP range: " ip_add
     echo -e $PUL ""
     nmap -sT $ip_add
     echo ""
     echo ""
}


qr_code() {

#      pkg install qrencode -y && apt install qrencode -y
#      clear

qr_codegd() {
      echo ""
      echo ""
      echo ""
      echo -e $GRN ""
      echo "     🔆 𝐐𝐑 𝐂𝐎𝐃𝐄 𝐆𝐄𝐍𝐄𝐑𝐀𝐓𝐎𝐑 "
      echo -e $RED ""
      read -p "     Enter Msg or url to create qrcode : " g
      echo ""
      sleep 1s

      #TimeStamp
      Tstamp=$(date +'%d-%m-%Y-%H-%M-%S')

      # Define the file and directory paths

      dir_path="/sdcard/GD-QR-CODES"

      # Check if the directory exists
      if [ -d "$dir_path" ]; then
      echo ""
      qrencode -o /sdcard/GD-QR-CODES/gd-qrcode$Tstamp.png $g

#      echo ""
      echo ""
      echo -e $RED" 𝐂𝐑𝐄𝐀𝐓𝐄𝐃 𝐁𝐘 ➡"$GRN" @𝐠𝐝𝐭𝐡𝐞𝐡𝐚𝐜𝐤𝐞𝐫 " $MAGENTA""
      curl qrenco.de/$g 
      echo ""
      echo -e $YEL" 𝐘𝐎𝐔𝐑 𝐐𝐑 𝐂𝐎𝐃𝐄 𝐃𝐎𝐖𝐍𝐋𝐎𝐀𝐃 𝐎𝐍 " $RED"➡ " $GRN"/sdcard/GD-QR-CODES/ "
      echo ""
      echo ""
#      qrencode -o HW-Toolkit/QR/GD-qrcode.png $g
else
      echo ""
      mkdir /sdcard/GD-QR-CODES &
      echo ""
#      qrencode -o /sdcard/GD-QR-CODES/gd-qrcode.png $g
      echo -e $PUL "               𝐒𝐎𝐑𝐑𝐘 𝐁𝐔𝐓 𝐏𝐋𝐄𝐀𝐒𝐄 𝐓𝐑𝐘 𝐀𝐆𝐀𝐈𝐍... 😅"
      echo ""
fi
#      curl -o HW-Toolkit/QR qrenco.de/$g
#      qrencode -o HW-Toolkit/QR/gd-qrcode.png $g
      echo ""
}

if dpkg -l | grep -q qrencode; then
         qr_codegd
else
pkg install qrencode -y && apt install qrencode -y
clear
qr_codegd
fi
}


random_pass() {
#          pkg install pwgen -y && apt install pwgen -y
#          clear
          echo ""
          echo ""
          echo ""
          echo -e $YEL ""
          echo "     📇 𝐑𝐀𝐍𝐃𝐎𝐌 𝐏𝐀𝐒𝐒𝐖𝐎𝐑𝐃'𝐒 𝐆𝐄𝐍𝐄𝐑𝐀𝐓𝐎𝐑  "
          echo -e $BLU ""
          read -p "     Enter Number password : " pw
          echo -e $GRN ""
          pwgen -s $pw
          echo ""
}


device_info() {
#         pkg install rxfeatch -y  && apt install rxfeatch -y
#          echo ""
#          echo ""
          echo ""
          echo ""
#          screenfeatch ; neofeatch ; rxfeatch
          echo ""
          # Function to get system information
get_system_info() {
    echo ""
    sleep 1s
    echo -e $RED"                     ================================"
    echo -e $YEL"                            𝐆𝐃-𝐃𝐞𝐯𝐢𝐜𝐞-𝐈𝐧𝐟𝐨-𝐅𝐞𝐭𝐜𝐡     "
    echo -e $RED"                     ================================"
    sleep 1s
    echo -e $GRN""
    echo -e $RED" Username   "$WHITE":" $GRN" $(whoami)"
    echo -e $RED" OS         "$WHITE":" $GRN" $(uname -o)"
    echo -e $RED" Kernel     "$WHITE":" $GRN" $(uname -r)"
    echo -e $RED" Uptime     "$WHITE":" $GRN" $(uptime -p)"
    echo -e $RED" Packages   "$WHITE":" $GRN" $(pkg list-installed | wc -l)"
    echo -e $RED" Shell      "$WHITE":" $GRN" $SHELL"
    echo -e $RED" Resolution "$WHITE":" $GRN" $(termux-info | grep 'Display size' | awk '{print $3}')"
    echo -e $RED" DE         "$WHITE":" $GRN" Termux"
    echo -e $RED" WM         "$WHITE":" $GRN" None"
    echo -e $RED" Theme      "$WHITE":" $GRN" Default"
    echo -e $RED" Icons      "$WHITE":" $GRN" Default"
    echo -e $RED" Terminal   "$WHITE":" $GRN" Termux"
    echo -e $RED" CPU        "$WHITE":" $GRN" $(uname -m)"
    echo -e $RED" Memory     "$WHITE":" $GRN" $(termux-info | grep 'Total memory' | awk '{print $3}')"
    echo -e $RED" Network    "$WHITE":" $GRN" $(termux-info | grep 'Network' | awk '{print $3}')"
    echo -e $RED" Battery    "$WHITE":" $GRN" $(termux-battery-status)"

    echo -e $RED"============================================================================"
}

# Call the function to display system information
get_system_info

echo ""
echo ""
}


SF_Trancefer() {

echo ""
echo ""
echo -e $R ""

if dpkg -l | grep -q magic-wormhole-rs ; wormhole-rs; then

    echo ""
    echo ""
    echo " ✅ $package_name is installed."
else
    echo ""
    echo ""
    echo " ❌ $package_name is not installed."
fi
#            pkg install magic-wormhole-rs wormhole-rs -y
#           clear
#            apt install magic-wormhole-rs wormhole-rs -y
#           clear
      echo ""
      echo ""
      echo ""
echo -e $CYAN ""
echo "⚪ 𝐄𝐍𝐓𝐄𝐑 𝐓𝐇𝐄 𝐅𝐈𝐋𝐄 𝐎𝐑 𝐅𝐎𝐋𝐃𝐄𝐑\n 𝐘𝐎𝐔 𝐖𝐀𝐍𝐓 𝐓𝐎 𝐒𝐇𝐀𝐑𝐄 𝐖𝐈𝐓𝐇 𝐘𝐎𝐔𝐑 𝐏𝐀𝐑𝐓𝐍𝐄𝐑  "
echo -e $YEL ""
read -p "     Enter file or folder path : " wormholeSend
echo -e $GRN ""
wormhole-rs send $wormholeSend
echo ""
}


SF_Receiver() {

#            pkg install magic-wormhole-rs wormhole-rs -y
#           clear
#            apt install magic-wormhole-rs wormhole-rs -y
#           clear
      echo ""
      echo ""
      echo ""
echo -e $BLU ""
echo "     ⚪ 𝐄𝐍𝐓𝐄𝐑 𝐅𝐈𝐋𝐄 𝐑𝐄𝐂𝐄𝐈𝐕𝐄𝐑 𝐂𝐎𝐃𝐄 "
echo -e $RED ""
read -p  "     Enter The File Receiver Code : " wormholeReceive
echo ""
echo -e $PUL"     📩 Wait Few Sec.. For Receive Your File/Folder " | pv -qL 35
echo -e $GRN ""
wormhole-rs receive $wormholeReceive
echo ""
} 


back_menu() {
          sleep 1s
          bash HW-Toolkit.sh
}


exit_tool() {
         echo ""
         sleep 1s
         echo "                   ok bye then....."
echo ""
echo ""
         sleep 1s
          exit 1 ; exit 0
}



clear
echo ""

###########################################################


# HW-TOOLKIT, SECRET TOOLS LOGO

display_menu() {

echo -e $GRN ""
echo "             ███████╗███████╗ ██████╗██████╗ ███████╗████████╗ "
echo "             ██╔════╝██╔════╝██╔════╝██╔══██╗██╔════╝╚══██╔══╝ "
echo "             ███████╗█████╗  ██║     ██████╔╝█████╗     ██║   "
echo "             ╚════██║██╔══╝  ██║     ██╔══██╗██╔══╝     ██║   "
echo "             ███████║███████╗╚██████╗██║  ██║███████╗   ██║   "
echo "             ╚══════╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚══════╝   ╚═╝   "
echo -e $RED  "                                [ 🔍 ]                   "
echo ""
echo "              ████████╗ ██████╗  ██████╗ ██╗     ███████╗      "
echo "              ╚══██╔══╝██╔═══██╗██╔═══██╗██║     ██╔════╝      "
echo "                 ██║   ██║   ██║██║   ██║██║     ███████╗      "
echo "                 ██║   ██║   ██║██║   ██║██║     ╚════██║      "
echo "                 ██║   ╚██████╔╝╚██████╔╝███████╗███████║      "
echo "                 ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝╚══════╝      "
echo -e $WHITE "                    [ 💻 ] 𝗔𝗨𝗧𝗛𝗢𝗥 :"$YEL" @GDTHEHACKER " | pv -qL 35
echo ""
echo ""
echo -e $GRN ""
echo ""
echo -e $RED"  ["$WHITE" 1. "$RED"]" $GRN" Scan open ports" $RED"              ["$WHITE" 2. "$RED"]" $GRN " Create a QR code "
echo ""
echo ""
echo -e $RED"  ["$WHITE" 3. "$RED"]" $GRN" Generate random password" $RED"     ["$WHITE" 4. "$RED"]" $GRN " Your device basic info "
echo ""
echo ""
echo -e $RED"  ["$WHITE" 5. "$RED"]" $GRN" Secret File Trancefer" $RED"        ["$WHITE" 6. "$RED"]" $GRN " Secret File Receiver"
echo ""
echo ""
echo -e $RED"  ["$WHITE" 0. "$RED"]" $GRN" back to tool menu " $RED"           ["$WHITE" 00 "$RED"]" $GRN " exit"
echo ""
echo ""
}


# Get user input

while true; do
display_menu

echo -e $YEL ""
read -p "  [ 🌐 ] Enter your choice : " choice

# Execute the chosen function
case $choice in

    1) nmap_scan ;;
    2) qr_code ;;
    3) random_pass ;;
    4) device_info ;;
    5) SF_Trancefer ;;
    6) SF_Receiver ;;
    0) back_menu ;;
   00) exit_tool ;;
    *) echo -e $MAGENTA " Invalid choice. Please try again." ;;
esac
    echo -e $CYAN ""
    read -p " 𝐏ress 𝐄nter 𝐓o 𝐂ontinue..."
    clear
done

